# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\main.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1067, 694)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(12)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.file_explorer = QtWidgets.QGroupBox(self.centralwidget)
        self.file_explorer.setObjectName("file_explorer")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.file_explorer)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tree_scripts = FileExplorer(self.file_explorer)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tree_scripts.sizePolicy().hasHeightForWidth())
        self.tree_scripts.setSizePolicy(sizePolicy)
        self.tree_scripts.setMinimumSize(QtCore.QSize(300, 0))
        self.tree_scripts.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed)
        self.tree_scripts.setObjectName("tree_scripts")
        self.tree_scripts.header().setDefaultSectionSize(200)
        self.tree_scripts.header().setSortIndicatorShown(True)
        self.tree_scripts.header().setStretchLastSection(True)
        self.verticalLayout_3.addWidget(self.tree_scripts)
        self.horizontalLayout_2.addLayout(self.verticalLayout_3)
        self.line = QtWidgets.QFrame(self.file_explorer)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout_2.addWidget(self.line)
        self.horizontalLayout.addWidget(self.file_explorer)
        self.main_script = EditorTabWidget(self.centralwidget)
        self.main_script.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_script.sizePolicy().hasHeightForWidth())
        self.main_script.setSizePolicy(sizePolicy)
        self.main_script.setStyleSheet("")
        self.main_script.setTabsClosable(True)
        self.main_script.setObjectName("main_script")
        self.horizontalLayout.addWidget(self.main_script)
        self.verticalLayout.addLayout(self.horizontalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1067, 25))
        self.menubar.setObjectName("menubar")
        self.menu_view = QtWidgets.QMenu(self.menubar)
        self.menu_view.setObjectName("menu_view")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_new_script = QtWidgets.QAction(MainWindow)
        self.action_new_script.setObjectName("action_new_script")
        self.action_open_script = QtWidgets.QAction(MainWindow)
        self.action_open_script.setObjectName("action_open_script")
        self.action_save_script = QtWidgets.QAction(MainWindow)
        self.action_save_script.setObjectName("action_save_script")
        self.action_file_explorer = QtWidgets.QAction(MainWindow)
        self.action_file_explorer.setObjectName("action_file_explorer")
        self.action_add_script = QtWidgets.QAction(MainWindow)
        self.action_add_script.setObjectName("action_add_script")
        self.action_add_category = QtWidgets.QAction(MainWindow)
        self.action_add_category.setObjectName("action_add_category")
        self.action_save = QtWidgets.QAction(MainWindow)
        self.action_save.setEnabled(False)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(MainWindow)
        self.action_save_as.setEnabled(False)
        self.action_save_as.setObjectName("action_save_as")
        self.action_close = QtWidgets.QAction(MainWindow)
        self.action_close.setObjectName("action_close")
        self.action_start_all = QtWidgets.QAction(MainWindow)
        self.action_start_all.setObjectName("action_start_all")
        self.action_stop_all = QtWidgets.QAction(MainWindow)
        self.action_stop_all.setObjectName("action_stop_all")
        self.menu_view.addAction(self.action_file_explorer)
        self.menu.addAction(self.action_add_category)
        self.menu.addAction(self.action_add_script)
        self.menu.addSeparator()
        self.menu.addAction(self.action_save)
        self.menu.addSeparator()
        self.menu.addAction(self.action_close)
        self.menu_2.addAction(self.action_start_all)
        self.menu_2.addAction(self.action_stop_all)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_view.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "按鍵精靈"))
        self.file_explorer.setTitle(_translate("MainWindow", "檔案總管"))
        self.tree_scripts.setSortingEnabled(True)
        self.tree_scripts.headerItem().setText(0, _translate("MainWindow", "名稱"))
        self.menu_view.setTitle(_translate("MainWindow", "檢視"))
        self.menu.setTitle(_translate("MainWindow", "檔案"))
        self.menu_2.setTitle(_translate("MainWindow", "操作"))
        self.action_new_script.setText(_translate("MainWindow", "新建腳本"))
        self.action_open_script.setText(_translate("MainWindow", "載入腳本"))
        self.action_save_script.setText(_translate("MainWindow", "儲存腳本"))
        self.action_file_explorer.setText(_translate("MainWindow", "檔案總管"))
        self.action_file_explorer.setToolTip(_translate("MainWindow", "AAA"))
        self.action_file_explorer.setShortcut(_translate("MainWindow", "Ctrl+Shift+E"))
        self.action_add_script.setText(_translate("MainWindow", "新增腳本"))
        self.action_add_script.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_add_category.setText(_translate("MainWindow", "新增類別"))
        self.action_add_category.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.action_save.setText(_translate("MainWindow", "儲存檔案"))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_save_as.setText(_translate("MainWindow", "另存新檔"))
        self.action_save_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_close.setText(_translate("MainWindow", "結束"))
        self.action_close.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_start_all.setText(_translate("MainWindow", "一鍵啟用"))
        self.action_start_all.setShortcut(_translate("MainWindow", "F5"))
        self.action_stop_all.setText(_translate("MainWindow", "一鍵停用"))
        self.action_stop_all.setShortcut(_translate("MainWindow", "F8"))
from ui import EditorTabWidget, FileExplorer
